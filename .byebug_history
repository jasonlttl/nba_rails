continue
possession_formula(v) / Game.find_by(nba_game_id: k).minutes * 48
48 * 48
Game.find_by(nba_game_id: k).minutes * 48
Game.find_by(nba_game_id: k).minutes
Game.find_by(nba_game_id: k).minutes * 48
continue
 ((self[:quarters] - 4 * 5) + 48)c
self[:quarters]
 ((self[:quarters] - 4 * 5) + 48)
c
q
continue
c
self.class
self[:quarters]
self.quarters
self
game
self.quarters
quarters
c
quit
c
games
c
games
c
team.games.select { |game| game.date >= @start_date && game.date <= @end_date }
team.games.select { |game| game.date >= "2014-01-24" && game.date <= "2014-01-29" }
team.games.select { |game| game.date >= "2014-01-24" && game.date <= "2014-01-29 }" 
team.games.filter
team.games.where(:date => @start_date..@end_date)
team.games
team
c
n
team
c
Team.games.where(:date => @start_date..@end_date)
teams
c
link
c
date[0..3] + "0" + date[4..6]
s
date.length
date
c
@date
GameGrab.new(date)
link
n
link
c
date
c
link
n
link
n
c
@game_possessions = TeamStatsAnalysis.new({start_date: @history_start_date,end_date: @history_end_date}). all_possession_stats_fga
   11:                 all_possession_stats_fga
   10:                 end_date: @history_end_date}).
    9:                 start_date: @history_start_date,
TeamStatsAnalysis.new({
n
s
@history_start_date = params[:history_dates][:begin_date]
c
params[:dates][:begin_date]
Date.new(params[:dates][:begin_date])
Date.new(params[:dates][:begin_date]
c
    7:                 end_date: Date.new(params[:dates][:end_date]))
    6:                 begin_date: Date.new(params[:dates][:begin_date]),
TeamStatsAnalysis.new(
params[:dates].nil?
params[:dates]
params
c
params
c
params
c
params
c
params
c
values
c
values
c
values
c
away_possessions
home_possessions
c
away_possessions
home_possessions
c
values["home"]["oreb"]c
values["home"]["to"]
values["home"]["fga"] - values["home"]["fgm"]
values["away"]["dreb"]
values["home"]["oreb"]
values["home"]["fta"]
values["home"]["fga"] 
values
(values["home"]["fga"] + 0.4 * values["home"]["fta"] - 1.07 * (values["home"]["oreb"]/(values["home"]["oreb"] + values["away"]["dreb"])) * (values["home"]["fga"] - values["home"]["fgm"]) + values["home"]["to"])
(values["away"]["fga"] + 0.4 * values["away"]["fta"] - 1.07 * (values["away"]["oreb"]/(values["away"]["oreb"] + values["home"]["dreb"])) * (values["away"]["fga"] - values["away"]["fgm"]) + values["away"]["to"])
c
(values["away"]["fga"] + 0.4 * values["away"]["fta"] - 1.07 * (values["away"]["oreb"]/(values["away"]["oreb"] + values["home"]["dreb"])) * (values["away"]["fga"] - values["away"]["fgm"]) + values["away"]["to"])
(values["home"]["fga"] + 0.4 * values["home"]["fta"] - 1.07 * (values["home"]["oreb"]/(values["home"]["oreb"] + values["away"]["dreb"])) * (values["home"]["fga"] - values["home"]["fgm"]) + values["home"]["to"])
home_possessions
home_posessions
c
values
c
(values["home"]["fga"] + 0.4 * values["home"]["fta"] - 1.07 * (values["home"]["oreb"]/(values["home"]["oreb"] + values["away"]["dreb"])) * (values["home"]["fga"] - values["home"]["fgm"]) + values["home"]["to"])
1.07 * (values["home"]["oreb"]/(values["home"]["oreb"] + values["away"]["dreb"])) * (values["home"]["fga"] - values["home"]["fgm"]) + values["home"]["to"])
0.4 * values["home"]["fta"]
values["home"]["fga"]
(values["away"]["fga"] + 0.4 * values["away"]["fta"] - 1.07 * (values["away"]["oreb"]/(values["away"]["oreb"] + values["home"]["dreb"])) * (values["away"]["fga"] - values["away"]["fgm"]) + values["away"]["to"])
(values["home"]["fga"] + 0.4 * values["home"]["fta"] - 1.07 * (values["home"]["oreb"]/(values["home"]["oreb"] + values["away"]["dreb"])) * (values["home"]["fga"] - values["home"]["fgm"]) + values["home"]["to"])
home_possessions
q
c
s
c
team.mascot
c
team.idc
team.mascot
team.conference
team.id
team.mascot
team
team.mascot
q
@date
c
shot_chart_json['resultSets'][0]['rowSet'].qfirst
shot_chart_json['resultSets'][0]['rowSet'].first
shot_chart_json['resultSets'][0]['rowSet']
shot_chart_json['resultSets']['rowSet']
shot_chart_json['resultSets']
shot_chart_json['resultsSets']
shot_chart_json['resultsSet']
shot_chart_json
c
link
c
relaoc
link
c
s
player.nba_player_id
player
q
s
game.quarters
game
q
stats[8]
q
advanced_stat_line_json['resultSets'].first['headers']q
advanced_stat_line_json['resultSets'].first['headers']
advanced_stat_line_json['resultSets']['headers']
advanced_stat_line_json['resultSets']
advanced_stat_line_json.resultSets
advanced_stat_line_json.first
advanced_stat_line_json
q
stats
q
stats
q
c
q
stats['resultSets'][0]['rowSet'][1]
stats['resultSets'][0]['rowSet']
stats['resultSets']['rowSet']
stats['resultSets'][0]
stats['resultSets']
stats
c
game_data
c
game_data
c
game_data
Game.create(game_data)
Game.create(game_data
game_data
c
game_data
c
Game.create(away_team: 1610612765)
Game.create(away_team: 1610612765
game_data
Game.create(game_data)
c
cc
game_data
c
game_data
n
game_data
c
game_data
c
game_data
c
game_data
new_game
c
game_data
c
Game.create(game_data)c
game_data
c
Game.create(game_data)
game_data
Game.create(game_data)
c
reload!
game_data
Game.create(game_data)
c
q
new_gameq
new_game.away_team
new_game.home_team
new_game
new_game.home_team = game_home_team
game_home_team
n
game_home_team
c
Team.find_by_nba_team_id(game['teams'].first['id'])
c
q
reload!
Game.create(game_data)
c
n
if game_record
if game_record puts 'hello'; end
if game_record puts 'hello' end
game_record
game_record.update_attributes(game_data)
game_record
game_data
game
